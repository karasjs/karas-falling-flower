{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { version } from '../package.json';\n\nconst {\n  enums: {\n    STYLE_KEY: {\n      DISPLAY,\n      VISIBILITY,\n      OPACITY,\n      TRANSFORM_ORIGIN,\n    },\n  },\n  util: {\n    isNil,\n  },\n  math: {\n    geom: {\n      d2r,\n    },\n    matrix: {\n      identity,\n      multiply,\n    },\n  },\n} = karas;\n\nclass FallingFlower extends karas.Component {\n  constructor(props) {\n    super(props);\n    this.count = 0;\n    this.time = 0;\n    this.playbackRate = props.playbackRate || 1;\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentDidMount() {\n    let { props } = this;\n    let { list = [], num = 0, initNum = 0, interval = 300, intervalNum = 1, delay = 0, autoPlay } = props;\n    if(num === 'infinity' || num === 'Infinity') {\n      num = Infinity;\n    }\n    let dataList = [];\n    let i = 0, length = list.length;\n    let lastTime = 0, count = 0;\n    let fake = this.ref.fake;\n    let cb = this.cb = diff => {\n      diff *= this.playbackRate;\n      if(delay > 0) {\n        delay -= diff;\n      }\n      if(delay <= 0) {\n        diff += delay;\n        this.time += diff;\n        delay = 0;\n      }\n      // 如果有初始粒子\n      if(initNum > 0) {\n        lastTime = this.time;\n        while(initNum-- > 0) {\n          i++;\n          i %= length;\n          count++;\n          dataList.push(this.genItem(list[i]));\n        }\n      }\n      // 已有的每个粒子时间增加计算位置，结束的则消失\n      for(let j = dataList.length - 1; j >= 0; j--) {\n        let item = dataList[j];\n        item.time += diff;\n        if(item.time >= item.duration) {\n          dataList.splice(j, 1);\n        }\n        else if(item.source) {\n          let { x, y, width, height, distance, direction, deg = 90, iterations = 1, time, duration } = item;\n          let percent = time / duration;\n          let dy = distance * percent;\n          let per = duration / iterations;\n          let count = Math.floor(time / per);\n          item.nowPercent = (time % per) / per;\n          item.nowDirection = (count % 2 === 0) ? direction : !direction;\n          item.nowX = x - width * 0.5;\n          item.nowY = y + dy - height * 0.5;\n        }\n      }\n      if(count >= num) {\n        return;\n      }\n      if(this.time >= lastTime + interval) {\n        lastTime = this.time;\n        for(let j = 0; j < intervalNum; j++) {\n          i++;\n          i %= length;\n          count++;\n          dataList.push(this.genItem(list[i]))\n          if(count >= num) {\n            break;\n          }\n        }\n      }\n    };\n    if(autoPlay !== false) {\n      fake.frameAnimate(cb);\n    }\n    let a = this.animation = fake.animate([\n      {\n        opacity: 1,\n      },\n      {\n        opacity: 0,\n      }\n    ], {\n      duration: 1000,\n      delay,\n      iterations: Infinity,\n      autoPlay,\n    });\n    fake.render = (renderMode, lv, ctx, cache, dx = 0, dy = 0) => {\n      let { sx, sy } = fake;\n      let computedStyle = this.computedStyle;\n      if(computedStyle[DISPLAY] === 'none'\n        || computedStyle[VISIBILITY] === 'hidden'\n        || computedStyle[OPACITY] <= 0) {\n        return;\n      }\n      dataList.forEach(item => {\n        if(item.source) {\n          let x = item.nowX + sx + dx;\n          let y = item.nowY + sy + dy;\n          let m = this.matrixEvent;\n          let tfo = [x, y + item.origin];\n          let r;\n          // 左右摇摆为一个时期，前半在一侧后半在另一侧\n          if(item.nowPercent >= 0.5) {\n            r = d2r(item.deg * (item.nowPercent - 0.5) * (item.nowDirection ? -1 : 1));\n          }\n          else {\n            r = d2r(item.deg * (0.5 - item.nowPercent) * (item.nowDirection ? 1 : -1));\n          }\n          let t = identity();\n          let sin = Math.sin(r);\n          let cos = Math.cos(r);\n          t[0] = t[5] = cos;\n          t[1] = sin;\n          t[4] = -sin;\n          m = multiply([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tfo[0], tfo[1], 0, 1], m);\n          m = multiply(m, t);\n          m = multiply(m, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -tfo[0], -tfo[1], 0, 1]);\n          ctx.setTransform(m[0], m[1], m[4], m[5], m[12], m[13]);\n          ctx.drawImage(item.source, x, y, item.width, item.height);\n        }\n      });\n    };\n  }\n\n  genItem(item) {\n    let { width, height } = this;\n    let o = {\n      time: 0,\n      count: 0,\n    };\n    if(Array.isArray(item.x)) {\n      o.x = (item.x[0] + Math.random() * (item.x[1] - item.x[0])) * width;\n    }\n    else {\n      o.x = item.x * width;\n    }\n    if(Array.isArray(item.y)) {\n      o.y = (item.y[0] + Math.random() * (item.y[1] - item.y[0])) * height;\n    }\n    else {\n      o.y = item.y * height;\n    }\n    if(Array.isArray(item.duration)) {\n      o.duration = (item.duration[0] + Math.random() * (item.duration[1] - item.duration[0]));\n    }\n    else {\n      o.duration = item.duration;\n    }\n    if(Array.isArray(item.width)) {\n      o.width = item.width[0] + Math.random() * (item.width[1] - item.width[0]);\n    }\n    else if(!isNil(item.width)) {\n      o.width = item.width;\n    }\n    if(Array.isArray(item.height)) {\n      o.height = item.height[0] + Math.random() * (item.height[1] - item.height[0]);\n    }\n    else if(!isNil(item.height)) {\n      o.height = item.height;\n    }\n    let distance = 0;\n    if(Array.isArray(item.distance)) {\n      distance = (item.distance[0] + Math.random() * (item.distance[1] - item.distance[0])) * height;\n    }\n    else if(distance) {\n      distance = item.distance * height;\n    }\n    o.distance = distance;\n    if(Array.isArray(item.deg)) {\n      o.deg = item.deg[0] + Math.random() * (item.deg[1] - item.deg[0]);\n    }\n    else if(!isNil(item.deg)) {\n      o.deg = item.deg;\n    }\n    else {\n      o.deg = 0;\n    }\n    if(Array.isArray(item.origin)) {\n      o.origin = item.origin[0] + Math.random() * (item.origin[1] - item.origin[0]);\n    }\n    else if(!isNil(item.origin)) {\n      o.origin = item.origin;\n    }\n    else {\n      o.origin = 0;\n    }\n    // 随机左右\n    o.direction = Math.random() > 0.5;\n    if(Array.isArray(item.iterations)) {\n      o.iterations = item.iterations[0] + Math.round(Math.random() * (item.iterations[1] - item.iterations[0]));\n    }\n    else if(!isNil(item.iterations)) {\n      o.iterations = item.iterations;\n    }\n    // if(item.easing) {\n    //   o.easing = karas.animate.easing.getEasing(item.easing);\n    // }\n    if(item.url) {\n      karas.inject.measureImg(item.url, function(res) {\n        if(res.success) {\n          o.source = res.source;\n          if(!(isNil(o.width) && isNil(o.height))) {\n            if(isNil(o.width)) {\n              o.width = res.width / res.height * o.height;\n            }\n            else if(isNil(o.height)) {\n              o.height = o.width * res.height / res.width;\n            }\n          }\n          if(o.height) {\n            o.origin *= o.height;\n          }\n        }\n      });\n    }\n    return o;\n  }\n\n  pause() {\n    this.ref.fake.removeFrameAnimate(this.cb);\n    if(this.animation) {\n      this.animation.pause();\n    }\n  }\n\n  resume() {\n    this.ref.fake.frameAnimate(this.cb);\n    if(this.animation) {\n      this.animation.resume();\n    }\n  }\n\n  play() {\n    this.count = 0;\n    this.time = 0;\n    this.ref.fake.removeFrameAnimate(this.cb);\n    this.ref.fake.frameAnimate(this.cb);\n    if(this.animation) {\n      this.animation.play();\n    }\n  }\n\n  render() {\n    return <div>\n      <$polyline ref=\"fake\"/>\n    </div>;\n  }\n}\n\nFallingFlower.version = version;\n\nexport default FallingFlower;\n"],"names":["karas","enums","STYLE_KEY","DISPLAY","VISIBILITY","OPACITY","TRANSFORM_ORIGIN","isNil","util","math","d2r","geom","matrix","identity","multiply","FallingFlower","props","count","time","playbackRate","list","num","initNum","interval","intervalNum","delay","autoPlay","Infinity","dataList","i","length","lastTime","fake","ref","cb","diff","push","genItem","j","item","duration","splice","source","x","y","width","height","distance","direction","deg","iterations","percent","dy","per","Math","floor","nowPercent","nowDirection","nowX","nowY","frameAnimate","animation","animate","opacity","render","renderMode","lv","ctx","cache","dx","sx","sy","computedStyle","forEach","m","matrixEvent","tfo","origin","r","t","sin","cos","setTransform","drawImage","o","Array","isArray","random","round","url","inject","measureImg","res","success","removeFrameAnimate","pause","resume","play","Component","version"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAwBIA,yBArBJ,CACEC,KADF,CAEIC,SAFJ;EAAA,IAGMC,OAHN,yBAGMA,OAHN;EAAA,IAIMC,UAJN,yBAIMA,UAJN;EAAA,IAKMC,OALN,yBAKMA,OALN;EAAA,0BAMMC,gBANN;EAAA,QAUIC,KAVJ,GAqBIP,yBArBJ,CASEQ,IATF,CAUID,KAVJ;EAAA,kBAqBIP,yBArBJ,CAYES,IAZF;EAAA,IAcMC,GAdN,eAaIC,IAbJ,CAcMD,GAdN;EAAA,qCAgBIE,MAhBJ;EAAA,IAiBMC,QAjBN,sBAiBMA,QAjBN;EAAA,IAkBMC,QAlBN,sBAkBMA;;MAKAC;;;;;EACJ,yBAAYC,KAAZ,EAAmB;EAAA;;EAAA;;EACjB,8BAAMA,KAAN;EACA,UAAKC,KAAL,GAAa,CAAb;EACA,UAAKC,IAAL,GAAY,CAAZ;EACA,UAAKC,YAAL,GAAoBH,KAAK,CAACG,YAAN,IAAsB,CAA1C;EAJiB;EAKlB;;;;aAED,iCAAwB;EACtB,aAAO,KAAP;EACD;;;aAED,6BAAoB;EAAA;;EAClB,UAAMH,KAAN,GAAgB,IAAhB,CAAMA,KAAN;EACA,wBAAgGA,KAAhG,CAAMI,IAAN;EAAA,UAAMA,IAAN,4BAAa,EAAb;EAAA,uBAAgGJ,KAAhG,CAAiBK,GAAjB;EAAA,UAAiBA,GAAjB,2BAAuB,CAAvB;EAAA,2BAAgGL,KAAhG,CAA0BM,OAA1B;EAAA,UAA0BA,OAA1B,+BAAoC,CAApC;EAAA,4BAAgGN,KAAhG,CAAuCO,QAAvC;EAAA,UAAuCA,QAAvC,gCAAkD,GAAlD;EAAA,+BAAgGP,KAAhG,CAAuDQ,WAAvD;EAAA,UAAuDA,WAAvD,mCAAqE,CAArE;EAAA,yBAAgGR,KAAhG,CAAwES,KAAxE;EAAA,UAAwEA,KAAxE,6BAAgF,CAAhF;EAAA,UAAmFC,QAAnF,GAAgGV,KAAhG,CAAmFU,QAAnF;;EACA,UAAGL,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,UAAjC,EAA6C;EAC3CA,QAAAA,GAAG,GAAGM,QAAN;EACD;;EACD,UAAIC,QAAQ,GAAG,EAAf;EACA,UAAIC,CAAC,GAAG,CAAR;EAAA,UAAWC,MAAM,GAAGV,IAAI,CAACU,MAAzB;EACA,UAAIC,QAAQ,GAAG,CAAf;EAAA,UAAkBd,KAAK,GAAG,CAA1B;EACA,UAAIe,IAAI,GAAG,KAAKC,GAAL,CAASD,IAApB;;EACA,UAAIE,EAAE,GAAG,KAAKA,EAAL,GAAU,UAAAC,IAAI,EAAI;EACzBA,QAAAA,IAAI,IAAI,MAAI,CAAChB,YAAb;;EACA,YAAGM,KAAK,GAAG,CAAX,EAAc;EACZA,UAAAA,KAAK,IAAIU,IAAT;EACD;;EACD,YAAGV,KAAK,IAAI,CAAZ,EAAe;EACbU,UAAAA,IAAI,IAAIV,KAAR;EACA,UAAA,MAAI,CAACP,IAAL,IAAaiB,IAAb;EACAV,UAAAA,KAAK,GAAG,CAAR;EACD,SATwB;;;EAWzB,YAAGH,OAAO,GAAG,CAAb,EAAgB;EACdS,UAAAA,QAAQ,GAAG,MAAI,CAACb,IAAhB;;EACA,iBAAMI,OAAO,KAAK,CAAlB,EAAqB;EACnBO,YAAAA,CAAC;EACDA,YAAAA,CAAC,IAAIC,MAAL;EACAb,YAAAA,KAAK;EACLW,YAAAA,QAAQ,CAACQ,IAAT,CAAc,MAAI,CAACC,OAAL,CAAajB,IAAI,CAACS,CAAD,CAAjB,CAAd;EACD;EACF,SAnBwB;;;EAqBzB,aAAI,IAAIS,CAAC,GAAGV,QAAQ,CAACE,MAAT,GAAkB,CAA9B,EAAiCQ,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;EAC5C,cAAIC,IAAI,GAAGX,QAAQ,CAACU,CAAD,CAAnB;EACAC,UAAAA,IAAI,CAACrB,IAAL,IAAaiB,IAAb;;EACA,cAAGI,IAAI,CAACrB,IAAL,IAAaqB,IAAI,CAACC,QAArB,EAA+B;EAC7BZ,YAAAA,QAAQ,CAACa,MAAT,CAAgBH,CAAhB,EAAmB,CAAnB;EACD,WAFD,MAGK,IAAGC,IAAI,CAACG,MAAR,EAAgB;EACnB,gBAAMC,CAAN,GAA6FJ,IAA7F,CAAMI,CAAN;EAAA,gBAASC,CAAT,GAA6FL,IAA7F,CAASK,CAAT;EAAA,gBAAYC,KAAZ,GAA6FN,IAA7F,CAAYM,KAAZ;EAAA,gBAAmBC,MAAnB,GAA6FP,IAA7F,CAAmBO,MAAnB;EAAA,gBAA2BC,QAA3B,GAA6FR,IAA7F,CAA2BQ,QAA3B;EAAA,gBAAqCC,SAArC,GAA6FT,IAA7F,CAAqCS,SAArC;EAAA,gBAA6FT,IAA7F,CAAgDU,GAAhD;EAAA,uCAA6FV,IAA7F,CAA0DW,UAA1D;EAAA,gBAA0DA,UAA1D,iCAAuE,CAAvE;EAAA,gBAA0EhC,IAA1E,GAA6FqB,IAA7F,CAA0ErB,IAA1E;EAAA,gBAAgFsB,QAAhF,GAA6FD,IAA7F,CAAgFC;EAChF,gBAAIW,OAAO,GAAGjC,IAAI,GAAGsB,QAArB;EACA,gBAAIY,EAAE,GAAGL,QAAQ,GAAGI,OAApB;EACA,gBAAIE,GAAG,GAAGb,QAAQ,GAAGU,UAArB;;EACA,gBAAIjC,MAAK,GAAGqC,IAAI,CAACC,KAAL,CAAWrC,IAAI,GAAGmC,GAAlB,CAAZ;;EACAd,YAAAA,IAAI,CAACiB,UAAL,GAAmBtC,IAAI,GAAGmC,GAAR,GAAeA,GAAjC;EACAd,YAAAA,IAAI,CAACkB,YAAL,GAAqBxC,MAAK,GAAG,CAAR,KAAc,CAAf,GAAoB+B,SAApB,GAAgC,CAACA,SAArD;EACAT,YAAAA,IAAI,CAACmB,IAAL,GAAYf,CAAC,GAAGE,KAAK,GAAG,GAAxB;EACAN,YAAAA,IAAI,CAACoB,IAAL,GAAYf,CAAC,GAAGQ,EAAJ,GAASN,MAAM,GAAG,GAA9B;EACD;EACF;;EACD,YAAG7B,KAAK,IAAII,GAAZ,EAAiB;EACf;EACD;;EACD,YAAG,MAAI,CAACH,IAAL,IAAaa,QAAQ,GAAGR,QAA3B,EAAqC;EACnCQ,UAAAA,QAAQ,GAAG,MAAI,CAACb,IAAhB;;EACA,eAAI,IAAIoB,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGd,WAAnB,EAAgCc,EAAC,EAAjC,EAAqC;EACnCT,YAAAA,CAAC;EACDA,YAAAA,CAAC,IAAIC,MAAL;EACAb,YAAAA,KAAK;EACLW,YAAAA,QAAQ,CAACQ,IAAT,CAAc,MAAI,CAACC,OAAL,CAAajB,IAAI,CAACS,CAAD,CAAjB,CAAd;;EACA,gBAAGZ,KAAK,IAAII,GAAZ,EAAiB;EACf;EACD;EACF;EACF;EACF,OAtDD;;EAuDA,UAAGK,QAAQ,KAAK,KAAhB,EAAuB;EACrBM,QAAAA,IAAI,CAAC4B,YAAL,CAAkB1B,EAAlB;EACD;;EACD,MAAQ,KAAK2B,SAAL,GAAiB7B,IAAI,CAAC8B,OAAL,CAAa,CACpC;EACEC,QAAAA,OAAO,EAAE;EADX,OADoC,EAIpC;EACEA,QAAAA,OAAO,EAAE;EADX,OAJoC,CAAb,EAOtB;EACDvB,QAAAA,QAAQ,EAAE,IADT;EAEDf,QAAAA,KAAK,EAALA,KAFC;EAGDyB,QAAAA,UAAU,EAAEvB,QAHX;EAIDD,QAAAA,QAAQ,EAARA;EAJC,OAPsB;;EAazBM,MAAAA,IAAI,CAACgC,MAAL,GAAc,UAACC,UAAD,EAAaC,EAAb,EAAiBC,GAAjB,EAAsBC,KAAtB,EAAgD;EAAA,YAAnBC,EAAmB,uEAAd,CAAc;EAAA,YAAXjB,EAAW,uEAAN,CAAM;EAC5D,YAAMkB,EAAN,GAAiBtC,IAAjB,CAAMsC,EAAN;EAAA,YAAUC,EAAV,GAAiBvC,IAAjB,CAAUuC,EAAV;EACA,YAAIC,aAAa,GAAG,MAAI,CAACA,aAAzB;;EACA,YAAGA,aAAa,CAACrE,OAAD,CAAb,KAA2B,MAA3B,IACEqE,aAAa,CAACpE,UAAD,CAAb,KAA8B,QADhC,IAEEoE,aAAa,CAACnE,OAAD,CAAb,IAA0B,CAF/B,EAEkC;EAChC;EACD;;EACDuB,QAAAA,QAAQ,CAAC6C,OAAT,CAAiB,UAAAlC,IAAI,EAAI;EACvB,cAAGA,IAAI,CAACG,MAAR,EAAgB;EACd,gBAAIC,CAAC,GAAGJ,IAAI,CAACmB,IAAL,GAAYY,EAAZ,GAAiBD,EAAzB;EACA,gBAAIzB,CAAC,GAAGL,IAAI,CAACoB,IAAL,GAAYY,EAAZ,GAAiBnB,EAAzB;EACA,gBAAIsB,CAAC,GAAG,MAAI,CAACC,WAAb;EACA,gBAAIC,GAAG,GAAG,CAACjC,CAAD,EAAIC,CAAC,GAAGL,IAAI,CAACsC,MAAb,CAAV;EACA,gBAAIC,CAAJ,CALc;;EAOd,gBAAGvC,IAAI,CAACiB,UAAL,IAAmB,GAAtB,EAA2B;EACzBsB,cAAAA,CAAC,GAAGpE,GAAG,CAAC6B,IAAI,CAACU,GAAL,IAAYV,IAAI,CAACiB,UAAL,GAAkB,GAA9B,KAAsCjB,IAAI,CAACkB,YAAL,GAAoB,CAAC,CAArB,GAAyB,CAA/D,CAAD,CAAP;EACD,aAFD,MAGK;EACHqB,cAAAA,CAAC,GAAGpE,GAAG,CAAC6B,IAAI,CAACU,GAAL,IAAY,MAAMV,IAAI,CAACiB,UAAvB,KAAsCjB,IAAI,CAACkB,YAAL,GAAoB,CAApB,GAAwB,CAAC,CAA/D,CAAD,CAAP;EACD;;EACD,gBAAIsB,CAAC,GAAGlE,QAAQ,EAAhB;EACA,gBAAImE,GAAG,GAAG1B,IAAI,CAAC0B,GAAL,CAASF,CAAT,CAAV;EACA,gBAAIG,GAAG,GAAG3B,IAAI,CAAC2B,GAAL,CAASH,CAAT,CAAV;EACAC,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAOE,GAAd;EACAF,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAOC,GAAP;EACAD,YAAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAACC,GAAR;EACAN,YAAAA,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC8D,GAAG,CAAC,CAAD,CAAxC,EAA6CA,GAAG,CAAC,CAAD,CAAhD,EAAqD,CAArD,EAAwD,CAAxD,CAAD,EAA6DF,CAA7D,CAAZ;EACAA,YAAAA,CAAC,GAAG5D,QAAQ,CAAC4D,CAAD,EAAIK,CAAJ,CAAZ;EACAL,YAAAA,CAAC,GAAG5D,QAAQ,CAAC4D,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAACE,GAAG,CAAC,CAAD,CAAzC,EAA8C,CAACA,GAAG,CAAC,CAAD,CAAlD,EAAuD,CAAvD,EAA0D,CAA1D,CAAJ,CAAZ;EACAT,YAAAA,GAAG,CAACe,YAAJ,CAAiBR,CAAC,CAAC,CAAD,CAAlB,EAAuBA,CAAC,CAAC,CAAD,CAAxB,EAA6BA,CAAC,CAAC,CAAD,CAA9B,EAAmCA,CAAC,CAAC,CAAD,CAApC,EAAyCA,CAAC,CAAC,EAAD,CAA1C,EAAgDA,CAAC,CAAC,EAAD,CAAjD;EACAP,YAAAA,GAAG,CAACgB,SAAJ,CAAc5C,IAAI,CAACG,MAAnB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCL,IAAI,CAACM,KAAtC,EAA6CN,IAAI,CAACO,MAAlD;EACD;EACF,SA1BD;EA2BD,OAnCD;EAoCD;;;aAED,iBAAQP,IAAR,EAAc;EACZ,UAAMM,KAAN,GAAwB,IAAxB,CAAMA,KAAN;EAAA,UAAaC,MAAb,GAAwB,IAAxB,CAAaA,MAAb;EACA,UAAIsC,CAAC,GAAG;EACNlE,QAAAA,IAAI,EAAE,CADA;EAEND,QAAAA,KAAK,EAAE;EAFD,OAAR;;EAIA,UAAGoE,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACI,CAAnB,CAAH,EAA0B;EACxByC,QAAAA,CAAC,CAACzC,CAAF,GAAM,CAACJ,IAAI,CAACI,CAAL,CAAO,CAAP,IAAYW,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACI,CAAL,CAAO,CAAP,IAAYJ,IAAI,CAACI,CAAL,CAAO,CAAP,CAA7B,CAAb,IAAwDE,KAA9D;EACD,OAFD,MAGK;EACHuC,QAAAA,CAAC,CAACzC,CAAF,GAAMJ,IAAI,CAACI,CAAL,GAASE,KAAf;EACD;;EACD,UAAGwC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACK,CAAnB,CAAH,EAA0B;EACxBwC,QAAAA,CAAC,CAACxC,CAAF,GAAM,CAACL,IAAI,CAACK,CAAL,CAAO,CAAP,IAAYU,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACK,CAAL,CAAO,CAAP,IAAYL,IAAI,CAACK,CAAL,CAAO,CAAP,CAA7B,CAAb,IAAwDE,MAA9D;EACD,OAFD,MAGK;EACHsC,QAAAA,CAAC,CAACxC,CAAF,GAAML,IAAI,CAACK,CAAL,GAASE,MAAf;EACD;;EACD,UAAGuC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACC,QAAnB,CAAH,EAAiC;EAC/B4C,QAAAA,CAAC,CAAC5C,QAAF,GAAcD,IAAI,CAACC,QAAL,CAAc,CAAd,IAAmBc,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACC,QAAL,CAAc,CAAd,IAAmBD,IAAI,CAACC,QAAL,CAAc,CAAd,CAApC,CAAjC;EACD,OAFD,MAGK;EACH4C,QAAAA,CAAC,CAAC5C,QAAF,GAAaD,IAAI,CAACC,QAAlB;EACD;;EACD,UAAG6C,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACM,KAAnB,CAAH,EAA8B;EAC5BuC,QAAAA,CAAC,CAACvC,KAAF,GAAUN,IAAI,CAACM,KAAL,CAAW,CAAX,IAAgBS,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACM,KAAL,CAAW,CAAX,IAAgBN,IAAI,CAACM,KAAL,CAAW,CAAX,CAAjC,CAA1B;EACD,OAFD,MAGK,IAAG,CAACtC,KAAK,CAACgC,IAAI,CAACM,KAAN,CAAT,EAAuB;EAC1BuC,QAAAA,CAAC,CAACvC,KAAF,GAAUN,IAAI,CAACM,KAAf;EACD;;EACD,UAAGwC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACO,MAAnB,CAAH,EAA+B;EAC7BsC,QAAAA,CAAC,CAACtC,MAAF,GAAWP,IAAI,CAACO,MAAL,CAAY,CAAZ,IAAiBQ,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACO,MAAL,CAAY,CAAZ,IAAiBP,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAlC,CAA5B;EACD,OAFD,MAGK,IAAG,CAACvC,KAAK,CAACgC,IAAI,CAACO,MAAN,CAAT,EAAwB;EAC3BsC,QAAAA,CAAC,CAACtC,MAAF,GAAWP,IAAI,CAACO,MAAhB;EACD;;EACD,UAAIC,QAAQ,GAAG,CAAf;;EACA,UAAGsC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACQ,QAAnB,CAAH,EAAiC;EAC/BA,QAAAA,QAAQ,GAAG,CAACR,IAAI,CAACQ,QAAL,CAAc,CAAd,IAAmBO,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACQ,QAAL,CAAc,CAAd,IAAmBR,IAAI,CAACQ,QAAL,CAAc,CAAd,CAApC,CAApB,IAA6ED,MAAxF;EACD,OAFD,MAGK,IAAGC,QAAH,EAAa;EAChBA,QAAAA,QAAQ,GAAGR,IAAI,CAACQ,QAAL,GAAgBD,MAA3B;EACD;;EACDsC,MAAAA,CAAC,CAACrC,QAAF,GAAaA,QAAb;;EACA,UAAGsC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACU,GAAnB,CAAH,EAA4B;EAC1BmC,QAAAA,CAAC,CAACnC,GAAF,GAAQV,IAAI,CAACU,GAAL,CAAS,CAAT,IAAcK,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACU,GAAL,CAAS,CAAT,IAAcV,IAAI,CAACU,GAAL,CAAS,CAAT,CAA/B,CAAtB;EACD,OAFD,MAGK,IAAG,CAAC1C,KAAK,CAACgC,IAAI,CAACU,GAAN,CAAT,EAAqB;EACxBmC,QAAAA,CAAC,CAACnC,GAAF,GAAQV,IAAI,CAACU,GAAb;EACD,OAFI,MAGA;EACHmC,QAAAA,CAAC,CAACnC,GAAF,GAAQ,CAAR;EACD;;EACD,UAAGoC,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACsC,MAAnB,CAAH,EAA+B;EAC7BO,QAAAA,CAAC,CAACP,MAAF,GAAWtC,IAAI,CAACsC,MAAL,CAAY,CAAZ,IAAiBvB,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACsC,MAAL,CAAY,CAAZ,IAAiBtC,IAAI,CAACsC,MAAL,CAAY,CAAZ,CAAlC,CAA5B;EACD,OAFD,MAGK,IAAG,CAACtE,KAAK,CAACgC,IAAI,CAACsC,MAAN,CAAT,EAAwB;EAC3BO,QAAAA,CAAC,CAACP,MAAF,GAAWtC,IAAI,CAACsC,MAAhB;EACD,OAFI,MAGA;EACHO,QAAAA,CAAC,CAACP,MAAF,GAAW,CAAX;EACD,OA7DW;;;EA+DZO,MAAAA,CAAC,CAACpC,SAAF,GAAcM,IAAI,CAACiC,MAAL,KAAgB,GAA9B;;EACA,UAAGF,KAAK,CAACC,OAAN,CAAc/C,IAAI,CAACW,UAAnB,CAAH,EAAmC;EACjCkC,QAAAA,CAAC,CAAClC,UAAF,GAAeX,IAAI,CAACW,UAAL,CAAgB,CAAhB,IAAqBI,IAAI,CAACkC,KAAL,CAAWlC,IAAI,CAACiC,MAAL,MAAiBhD,IAAI,CAACW,UAAL,CAAgB,CAAhB,IAAqBX,IAAI,CAACW,UAAL,CAAgB,CAAhB,CAAtC,CAAX,CAApC;EACD,OAFD,MAGK,IAAG,CAAC3C,KAAK,CAACgC,IAAI,CAACW,UAAN,CAAT,EAA4B;EAC/BkC,QAAAA,CAAC,CAAClC,UAAF,GAAeX,IAAI,CAACW,UAApB;EACD,OArEW;EAuEZ;EACA;;;EACA,UAAGX,IAAI,CAACkD,GAAR,EAAa;EACXzF,QAAAA,yBAAK,CAAC0F,MAAN,CAAaC,UAAb,CAAwBpD,IAAI,CAACkD,GAA7B,EAAkC,UAASG,GAAT,EAAc;EAC9C,cAAGA,GAAG,CAACC,OAAP,EAAgB;EACdT,YAAAA,CAAC,CAAC1C,MAAF,GAAWkD,GAAG,CAAClD,MAAf;;EACA,gBAAG,EAAEnC,KAAK,CAAC6E,CAAC,CAACvC,KAAH,CAAL,IAAkBtC,KAAK,CAAC6E,CAAC,CAACtC,MAAH,CAAzB,CAAH,EAAyC;EACvC,kBAAGvC,KAAK,CAAC6E,CAAC,CAACvC,KAAH,CAAR,EAAmB;EACjBuC,gBAAAA,CAAC,CAACvC,KAAF,GAAU+C,GAAG,CAAC/C,KAAJ,GAAY+C,GAAG,CAAC9C,MAAhB,GAAyBsC,CAAC,CAACtC,MAArC;EACD,eAFD,MAGK,IAAGvC,KAAK,CAAC6E,CAAC,CAACtC,MAAH,CAAR,EAAoB;EACvBsC,gBAAAA,CAAC,CAACtC,MAAF,GAAWsC,CAAC,CAACvC,KAAF,GAAU+C,GAAG,CAAC9C,MAAd,GAAuB8C,GAAG,CAAC/C,KAAtC;EACD;EACF;;EACD,gBAAGuC,CAAC,CAACtC,MAAL,EAAa;EACXsC,cAAAA,CAAC,CAACP,MAAF,IAAYO,CAAC,CAACtC,MAAd;EACD;EACF;EACF,SAfD;EAgBD;;EACD,aAAOsC,CAAP;EACD;;;aAED,iBAAQ;EACN,WAAKnD,GAAL,CAASD,IAAT,CAAc8D,kBAAd,CAAiC,KAAK5D,EAAtC;;EACA,UAAG,KAAK2B,SAAR,EAAmB;EACjB,aAAKA,SAAL,CAAekC,KAAf;EACD;EACF;;;aAED,kBAAS;EACP,WAAK9D,GAAL,CAASD,IAAT,CAAc4B,YAAd,CAA2B,KAAK1B,EAAhC;;EACA,UAAG,KAAK2B,SAAR,EAAmB;EACjB,aAAKA,SAAL,CAAemC,MAAf;EACD;EACF;;;aAED,gBAAO;EACL,WAAK/E,KAAL,GAAa,CAAb;EACA,WAAKC,IAAL,GAAY,CAAZ;EACA,WAAKe,GAAL,CAASD,IAAT,CAAc8D,kBAAd,CAAiC,KAAK5D,EAAtC;EACA,WAAKD,GAAL,CAASD,IAAT,CAAc4B,YAAd,CAA2B,KAAK1B,EAAhC;;EACA,UAAG,KAAK2B,SAAR,EAAmB;EACjB,aAAKA,SAAL,CAAeoC,IAAf;EACD;EACF;;;aAED,kBAAS;EACP,aAAOjG,qDACLA;EAAW,QAAA,GAAG,EAAC;EAAf,QADK,CAAP;EAGD;;;;IA7PyBA,yBAAK,CAACkG;;EAgQlCnF,aAAa,CAACoF,OAAd,GAAwBA,OAAxB;;;;;;;;"}